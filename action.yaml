name: Increase App Version
description: Increment the app version in app.json files (main and test apps).

inputs:
  Build_StagingDirectory:
    description: Path to the staging directory where app.json files are located.
    required: true

runs:
  using: "composite"
  steps:
    - name: Increment App Versions
      shell: pwsh
      run: |
        function Update-AppJsonVersion {
            param (
                [string]$AppJsonPath
            )

            if (Test-Path $AppJsonPath) {
                $app = Get-Content $AppJsonPath -Encoding UTF8 | ConvertFrom-Json
                $existingVersion = $app.version -as [version]
                $versionBuild = Get-Date -Format "yyyyMMdd"
                $versionRevision = Get-Date -Format "HHmmss"
                $nextVersion = [version]::new($existingVersion.Major, $existingVersion.Minor, $versionBuild, $versionRevision)
                $app.version = "$nextVersion"

                $app | ConvertTo-Json -Depth 100 | Set-Content $AppJsonPath -Encoding UTF8
                Write-Host "‚úÖ Updated version in $AppJsonPath to $nextVersion"
                return $nextVersion
            } else {
                Write-Host "‚ö†Ô∏è app.json not found at: $AppJsonPath"
                return $null
            }
        }

        function Update-TestAppDependencyVersion {
            param (
                [string]$AppJsonPath,
                [string]$mainAppId,
                [string]$mainAppPublisher,
                [string]$mainAppName,
                [string]$mainAppVersion
            )

            if (Test-Path $AppJsonPath) {
                $testApp = Get-Content $AppJsonPath -Encoding UTF8 | ConvertFrom-Json
                foreach ($dep in $testApp.dependencies) {
                    if ($dep.id -eq $mainAppId -or ($dep.name -eq $mainAppName -and $dep.publisher -eq $mainAppPublisher)) {
                        $dep.version = "[$mainAppVersion,)"
                        Write-Host "üîÅ Updated dependency version to [$mainAppVersion,) in test app"
                    }
                }

                $testApp | ConvertTo-Json -Depth 100 | Set-Content $AppJsonPath -Encoding UTF8
            } else {
                Write-Host "‚ö†Ô∏è Test app.json not found at: $AppJsonPath"
            }
        }

        $RepoDir = Get-Location

        # Main app versiyonunu g√ºncelle ve sakla
        $mainAppPath = "$RepoDir/src/PageExt/app.json"
        $mainAppVersion = Update-AppJsonVersion $mainAppPath

        # Test app versiyonunu g√ºncelle
        $testAppPath = "$RepoDir/src/Test/app.json"
        Update-AppJsonVersion $testAppPath

        # Test app dependency versiyonunu g√ºncelle
  
        Update-TestAppDependencyVersion `
            -AppJsonPath $testAppPath `
            -mainAppId "ab48383d-1c96-45ad-99cb-4181188821f9" `
            -mainAppPublisher "pargesoft" `
            -mainAppName "Saint-gobain" `
            -mainAppVersion $mainAppVersion
